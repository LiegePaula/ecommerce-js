Bom dia gurizada! Ultimo dia de aula para varios. TMJ <3
Token: 8865

-------------------------------------------------------------------------------------------------------
Codigo da Aula Passada:
https://github.com/Davi-Classes/JAVASCRIPT2025-DFS707/tree/main/Aula%2015
https://github.com/Davi-Classes/JAVASCRIPT2025-DFS707/tree/main/Aula%2015
https://github.com/Davi-Classes/ecommerce-js


-----------------------------------------------------------------------------------------------------------------
index.html


<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Gerenciamento de Produtos</title>

    <style>
      table {
        width: 50%;
      }

      table,
      tr,
      td,
      th {
        border: 1px solid black;
        border-collapse: collapse;
      }

      .input {
        display: flex;
        max-width: 300px;
        flex-direction: column;
        margin-bottom: 8px;
      }
    </style>
  </head>
  <body>
    <h1>Gerenciamento de Produtos</h1>

    <form id="produtos-form">
      <div class="input">
        <label for="nome">Nome</label>
        <input type="text" id="nome" name="nome" />
      </div>
      <div class="input">
        <label for="categoria">Categoria</label>
        <select name="categoria" id="categoria">
          <option value="Eletrônico">Eletrônico</option>
          <option value="Roupas">Roupas</option>
          <option value="Limpeza">Limpeza</option>
          <option value="Higiene">Higiene</option>
          <option value="Frutas">Frutas</option>
          <option value="Vegetais">Vegetais</option>
        </select>
      </div>
      <div class="input">
        <label for="preco">Preço</label>
        <input type="number" id="preco" name="preco" step="0.01" />
      </div>

      <button type="submit">Cadastrar</button>
    </form>

    <hr />
    <h2>Produtos</h2>

    <table id="produtos-table">
      <thead>
        <tr>
          <th>Nome</th>
          <th>Categoria</th>
          <th>Preço</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>

    <script>
      const API_URL = "http://localhost:8080";

      function criarLinhaProduto(produto) {
        const trProduto = document.createElement("tr");

        const tdNome = document.createElement("td");
        tdNome.textContent = produto.nome;
        trProduto.appendChild(tdNome);

        const tdCategoria = document.createElement("td");
        tdCategoria.textContent = produto.categoria;
        trProduto.appendChild(tdCategoria);

        const tdPreco = document.createElement("td");
        tdPreco.textContent = produto.preco.toLocaleString("pt-BR", {
          style: "currency",
          currency: "BRL",
        });
        trProduto.appendChild(tdPreco);

        return trProduto;
      }

      async function handleCarregarProdutos() {
        const response = await fetch(`${API_URL}/produtos`);
        const data = await response.json();

        const tableData = document.querySelector("#produtos-table tbody");

        for (let produto of data) {
          const trProduto = criarLinhaProduto(produto);
          tableData.appendChild(trProduto);
        }
      }

      window.addEventListener("load", handleCarregarProdutos);

      async function handleCadastrarProduto(event) {
        event.preventDefault();

        const form = event.target;

        const produto = {
          nome: form.nome.value,
          categoria: form.categoria.value,
          preco: Number(form.preco.value),
        };

        const response = await fetch(`${API_URL}/produtos`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(produto),
        });

        if (!response.ok) {
          alert("Error ao cadastrar produto.");
          return;
        }

        const tableData = document.querySelector("#produtos-table tbody");

        const trProduto = criarLinhaProduto(produto);
        tableData.appendChild(trProduto);

        form.reset();
      }

      const formProduto = document.getElementById("produtos-form");
      formProduto.addEventListener("submit", handleCadastrarProduto);
    </script>
  </body>
</html>

-------------------------------------------------------------------------------------------
package.json


{
    "name": "aula-14",
    "version": "1.0.0",
    "description": "",
    "main": "server.js",
    "type": "module",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "dependencies": {
      "cors": "^2.8.5",
      "express": "^5.1.0"
    }
  }

-----------------------------------------------------------------------------------------------------------------
server.js


import cors from "cors";
import express from "express";

import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);


let idCount = 0;

function criarId() {
  idCount += 1;
  return idCount;
}

const produtos = [];

const app = express();

app.use(express.json());
app.use(cors());

app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "index.html"));
});

app.get("/produtos", (req, res) => {
  res.json(produtos);
});

app.post("/produtos", (req, res) => {
  const data = req.body;

  if (!data.nome) {
    return res.status(400).json({ message: "O campo 'nome' é obrigatório." });
  }

  if (!data.categoria) {
    return res
      .status(400)
      .json({ message: "O campo 'categoria' é obrigatório." });
  }

  if (!data.preco) {
    return res.status(400).json({ message: "O campo 'preco' é obrigatório." });
  }

  const produto = {
    id: criarId(),
    nome: data.nome,
    categoria: data.categoria,
    preco: Number(data.preco),
  };

  if (isNaN(produto.preco)) {
    return res
      .status(400)
      .json({ message: "O campo 'preco' deve ser um numero." });
  }

  produtos.push(produto);
  res.json({ message: "Produto cadastrado com sucesso." });
});

app.get("/produtos/:id", (req, res) => {
  const { id } = req.params;
  const produto = produtos.find((p) => p.id == id);

  if (!produto) {
    res.json({ message: "Produto não encontrado" });
    return;
  }

  res.json(produto);
});

app.listen(8080, () =>
  console.log("Server is running at http://localhost:8080/")
);